using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Speech.Recognition;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {
    //Provides access to run any properly installed speech recognition services found on a windows desktop system
        SpeechRecognitionEngine recEngine = new SpeechRecognitionEngine();
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            //Represents a list of alternative items to make up an element in a grammar
            Choices commands = new Choices();
            commands.Add(new string[] { "Hello", "What's My Name", "will you help me on my report today" });
            //Provides an easy to use mechanism for constructing complicated objects from simple inputs
            GrammarBuilder gBuilder = new GrammarBuilder();
            gBuilder.Append(commands);
            //Provides run time support for obtaining and managing speech grammar information
            Grammar grammar = new Grammar(gBuilder);
            
            //Asynchronously loads a specific grammar
            recEngine.LoadGrammarAsync(grammar);
            //Assigns the systems deafault audio input to the current instance
            recEngine.SetInputToDefaultAudioDevice();
            //This event raised when the recognition engine detects speech, and has found one or more phrases with sufficient confidence levels
            recEngine.SpeechRecognized += recEngine_SpeechRecognized;
        }

        //Returns notification from SpeechRecognized event
        private void recEngine_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)
        {
            switch (e.Result.Text)
            {
                case "will you help me on my report today":
                    //Displays a message box that can contain text, buttons, and symbols that inform or instruct the user
                    MessageBox.Show("Of course! Everything for you sir!");
                    break;
                case "Hello":
                    MessageBox.Show("Hi Sir");
                    break;
                case "What's My Name":
                    //Gets or set the current text in the rich text box
                    richTextBox1.Text += "\nIldeponso Celeste";
                    break;
            }
        }

        private void btnDisable_Click(object sender, EventArgs e)
        {
            //Terminates a running instance of a recognition engine after the current recognition operation completes
            recEngine.RecognizeAsyncStop();
            btnDisable.Enabled = false;
        }

        private void btnEnabe_Click(object sender, EventArgs e)
        {
            //Proviedes either single or multiple asynchronous recognition reoperations on recognition engine input
            recEngine.RecognizeAsync(RecognizeMode.Multiple);
            btnDisable.Enabled = true;
        }
    }
}
